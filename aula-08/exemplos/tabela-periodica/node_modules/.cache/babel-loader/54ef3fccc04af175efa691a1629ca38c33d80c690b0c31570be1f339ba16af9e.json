{"ast":null,"code":"var _jsxFileName = \"/Users/cassioawt/git/GraPucrsOnline/DSF/aula-08/exemplos/tabela-periodica/src/components/linusPaulingDiagram.jsx\";\nimport React from 'react';\nimport './linusPaulingDiagram.css';\nimport { generateElectronDistribution, calculateLinusPaulingDiagram } from '../util/elementosDefinitions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LinusPaulingDiagram(_ref) {\n  let {\n    atomicNumber\n  } = _ref;\n  const shells = calculateLinusPaulingDiagram(atomicNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagram\",\n    children: [Object.entries(shells).map(_ref2 => {\n      let [shell, electrons] = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"layer\",\n        children: [renderShell(shell), renderSublevels(electrons), renderElectronCount(electrons)]\n      }, shell, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: generateElectronDistribution(atomicNumber)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = LinusPaulingDiagram;\nfunction renderShell(shell) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shell\",\n    children: shell\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\nfunction renderSublevels(electrons) {\n  const sublevels = ['s', 'p', 'd', 'f'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sublevels\",\n    children: sublevels.map(sublevel => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${sublevel}`,\n      children: renderElectrons(sublevel, electrons)\n    }, sublevel, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\nfunction renderElectrons(sublevel, electrons) {\n  const maxElectrons = getMaxElectrons(sublevel);\n  return Array.from({\n    length: maxElectrons\n  }, (_, index) => {\n    const isFilled = index < electrons;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `electron ${isFilled ? 'filled' : ''}`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  });\n}\nfunction getMaxElectrons(sublevel) {\n  switch (sublevel) {\n    case 's':\n      return 2;\n    case 'p':\n      return 6;\n    case 'd':\n      return 10;\n    case 'f':\n      return 14;\n    default:\n      return 0;\n  }\n}\nfunction renderElectronCount(electrons) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"electron-count\",\n    children: electrons\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n}\nexport default LinusPaulingDiagram;\nvar _c;\n$RefreshReg$(_c, \"LinusPaulingDiagram\");","map":{"version":3,"names":["React","generateElectronDistribution","calculateLinusPaulingDiagram","jsxDEV","_jsxDEV","LinusPaulingDiagram","_ref","atomicNumber","shells","className","children","Object","entries","map","_ref2","shell","electrons","renderShell","renderSublevels","renderElectronCount","fileName","_jsxFileName","lineNumber","columnNumber","_c","sublevels","sublevel","renderElectrons","maxElectrons","getMaxElectrons","Array","from","length","_","index","isFilled","$RefreshReg$"],"sources":["/Users/cassioawt/git/GraPucrsOnline/DSF/aula-08/exemplos/tabela-periodica/src/components/linusPaulingDiagram.jsx"],"sourcesContent":["import React from 'react';\nimport './linusPaulingDiagram.css';\nimport { generateElectronDistribution, calculateLinusPaulingDiagram } from '../util/elementosDefinitions';\n\nfunction LinusPaulingDiagram({ atomicNumber }) {\n  const shells = calculateLinusPaulingDiagram(atomicNumber);\n\n  return (\n    <div className=\"diagram\">\n      {Object.entries(shells).map(([shell, electrons]) => (\n        <div key={shell} className=\"layer\">\n          {renderShell(shell)}\n          {renderSublevels(electrons)}\n          {renderElectronCount(electrons)}\n        </div>\n      ))}\n      <p>{generateElectronDistribution(atomicNumber)}</p>\n    </div>\n  );\n}\n\nfunction renderShell(shell) {\n  return <div className=\"shell\">{shell}</div>;\n}\n\nfunction renderSublevels(electrons) {\n  const sublevels = ['s', 'p', 'd', 'f'];\n\n  return (\n    <div className=\"sublevels\">\n      {sublevels.map((sublevel) => (\n        <div key={sublevel} className={`${sublevel}`}>\n          {renderElectrons(sublevel, electrons)}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction renderElectrons(sublevel, electrons) {\n  const maxElectrons = getMaxElectrons(sublevel);\n\n  return Array.from({ length: maxElectrons }, (_, index) => {\n    const isFilled = index < electrons;\n\n    return (\n      <div key={index} className={`electron ${isFilled ? 'filled' : ''}`} />\n    );\n  });\n}\n\nfunction getMaxElectrons(sublevel) {\n  switch (sublevel) {\n    case 's':\n      return 2;\n    case 'p':\n      return 6;\n    case 'd':\n      return 10;\n    case 'f':\n      return 14;\n    default:\n      return 0;\n  }\n}\n\nfunction renderElectronCount(electrons) {\n  return <div className=\"electron-count\">{electrons}</div>;\n}\n\nexport default LinusPaulingDiagram\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}