{"ast":null,"code":"var _jsxFileName = \"/Users/cassioawt/git/GraPucrsOnline/DSF/aula-08/exemplos/tabela-periodica/src/components/linusPaulingDiagram.jsx\";\nimport React from 'react';\nimport './linusPaulingDiagram.css';\nimport { generateElectronDistribution, calculateLinusPaulingDiagram } from '../util/elementosDefinitions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LinusPaulingDiagram(_ref) {\n  let {\n    atomicNumber\n  } = _ref;\n  const shells = calculateLinusPaulingDiagram(atomicNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagram\",\n    children: [Object.entries(shells).map(_ref2 => {\n      let [shell, electrons] = _ref2;\n      return electrons > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"layer\",\n        children: [renderShell(shell), renderSublevels(shell, electrons), renderElectronCount(electrons)]\n      }, shell, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: generateElectronDistribution(atomicNumber)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = LinusPaulingDiagram;\nfunction renderShell(shell) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shell\",\n    children: shell\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\nfunction renderSublevels(shell, electrons) {\n  const sublevels = getSublevels(shell);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sublevels\",\n    children: sublevels.map(sublevel => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${sublevel}`,\n      children: renderElectrons(sublevel, electrons[sublevel])\n    }, sublevel, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\nfunction getSublevels(shell) {\n  switch (shell) {\n    case 'K':\n      return ['s'];\n    case 'L':\n      return ['s', 'p'];\n    case 'M':\n      return ['s', 'p', 'd'];\n    case 'N':\n      return ['s', 'p', 'd', 'f'];\n    case 'O':\n      return ['s', 'p', 'd', 'f'];\n    case 'P':\n      return ['s', 'p', 'd'];\n    case 'Q':\n      return ['s', 'p'];\n    default:\n      return [];\n  }\n}\nfunction renderElectrons(sublevel, electrons) {\n  const maxElectrons = getMaxElectrons(sublevel);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `electron ${electrons > 0 ? 'filled' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"electron-value\",\n      children: maxElectrons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this);\n}\nfunction getMaxElectrons(sublevel) {\n  console.log(\"sublevel --> \", sublevel);\n  switch (sublevel) {\n    case 's':\n      return 2;\n    case 'p':\n      return 6;\n    case 'd':\n      return 10;\n    case 'f':\n      return 14;\n    default:\n      return 0;\n  }\n}\nfunction renderElectronCount(electrons) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"electron-count\",\n    children: electrons\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 10\n  }, this);\n}\nexport default LinusPaulingDiagram;\nvar _c;\n$RefreshReg$(_c, \"LinusPaulingDiagram\");","map":{"version":3,"names":["React","generateElectronDistribution","calculateLinusPaulingDiagram","jsxDEV","_jsxDEV","LinusPaulingDiagram","_ref","atomicNumber","shells","className","children","Object","entries","map","_ref2","shell","electrons","renderShell","renderSublevels","renderElectronCount","fileName","_jsxFileName","lineNumber","columnNumber","_c","sublevels","getSublevels","sublevel","renderElectrons","maxElectrons","getMaxElectrons","console","log","$RefreshReg$"],"sources":["/Users/cassioawt/git/GraPucrsOnline/DSF/aula-08/exemplos/tabela-periodica/src/components/linusPaulingDiagram.jsx"],"sourcesContent":["import React from 'react';\nimport './linusPaulingDiagram.css';\nimport { generateElectronDistribution, calculateLinusPaulingDiagram } from '../util/elementosDefinitions';\n\nfunction LinusPaulingDiagram({ atomicNumber }) {\n  const shells = calculateLinusPaulingDiagram(atomicNumber);\n\n  return (\n    <div className=\"diagram\">\n      {Object.entries(shells).map(([shell, electrons]) => (\n        electrons > 0 && (\n          <div key={shell} className=\"layer\">\n            {renderShell(shell)}\n            {renderSublevels(shell, electrons)}\n            {renderElectronCount(electrons)}\n          </div>\n        )\n      ))}\n      <p>{generateElectronDistribution(atomicNumber)}</p>\n    </div>\n  );\n}\n\nfunction renderShell(shell) {\n  return <div className=\"shell\">{shell}</div>;\n}\n\nfunction renderSublevels(shell, electrons) {\n  const sublevels = getSublevels(shell);\n\n  return (\n    <div className=\"sublevels\">\n      {sublevels.map((sublevel) => (\n        <div key={sublevel} className={`${sublevel}`}>\n          {renderElectrons(sublevel, electrons[sublevel])}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction getSublevels(shell) {\n  switch (shell) {\n    case 'K':\n      return ['s'];\n    case 'L':\n      return ['s', 'p'];\n    case 'M':\n      return ['s', 'p', 'd'];\n    case 'N':\n      return ['s', 'p', 'd', 'f'];\n    case 'O':\n      return ['s', 'p', 'd', 'f'];\n    case 'P':\n      return ['s', 'p', 'd'];\n    case 'Q':\n      return ['s', 'p'];\n    default:\n      return [];\n  }\n}\n\n\nfunction renderElectrons(sublevel, electrons) {\n    const maxElectrons = getMaxElectrons(sublevel);\n  \n    return (\n      <div className={`electron ${electrons > 0 ? 'filled' : ''}`}>\n        <span className=\"electron-value\">{maxElectrons}</span>\n      </div>\n    );\n  }\n\nfunction getMaxElectrons(sublevel) {\n    console.log(\"sublevel --> \", sublevel)\n  switch (sublevel) {\n    case 's':\n      return 2;\n    case 'p':\n      return 6;\n    case 'd':\n      return 10;\n    case 'f':\n      return 14;\n    default:\n      return 0;\n  }\n}\n\nfunction renderElectronCount(electrons) {\n  return <div className=\"electron-count\">{electrons}</div>;\n}\n\nexport default LinusPaulingDiagram;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}