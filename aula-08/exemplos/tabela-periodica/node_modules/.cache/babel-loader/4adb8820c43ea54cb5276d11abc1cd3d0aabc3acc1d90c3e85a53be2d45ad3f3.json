{"ast":null,"code":"export function getElementType(element) {\n  // Array com os números atômicos dos elementos de cada grupo\n  const metaisAlcalinos = [3, 11, 19, 37, 55, 87];\n  const metaisAlcalinoTerrosos = [4, 12, 20, 38, 56, 88];\n  const metaloides = [5, 14, 32, 33, 51, 52, 84];\n  const metaisDeTransicao = [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 73, 74, 75, 76, 77, 78, 79, 80, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 104, 105, 106, 107, 108, 109, 110, 111, 112];\n  const lantanideos = [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71];\n  const actinideos = [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118];\n  const naoMetais = [1, 6, 7, 8, 15, 16, 34];\n  const outrosMetais = [13, 31, 49, 50, 81, 82, 83, 113, 114, 115, 116];\n  const halogenios = [9, 17, 35, 53];\n  const gasesNobres = [2, 10, 18, 36, 54, 86];\n\n  // Obtém o número atômico do elemento\n  const atomicNumber = element.atomicNumber;\n\n  // Verifica a qual grupo o número atômico pertence\n  if (metaisAlcalinos.includes(atomicNumber)) {\n    return 'metais-alcalinos';\n  } else if (metaisAlcalinoTerrosos.includes(atomicNumber)) {\n    return 'metais-alcalino-terrosos';\n  } else if (metaloides.includes(atomicNumber)) {\n    return 'metaloides';\n  } else if (metaisDeTransicao.includes(atomicNumber)) {\n    return 'metais-de-transicao';\n  } else if (lantanideos.includes(atomicNumber)) {\n    return 'lantanideos';\n  } else if (actinideos.includes(atomicNumber)) {\n    return 'actinideos';\n  } else if (naoMetais.includes(atomicNumber)) {\n    return 'nao-metais';\n  } else if (outrosMetais.includes(atomicNumber)) {\n    return 'outros-metais';\n  } else if (halogenios.includes(atomicNumber)) {\n    return 'halogenios';\n  } else if (gasesNobres.includes(atomicNumber)) {\n    return 'gases-nobres';\n  } else {\n    return ''; // Elemento não se encaixa em nenhuma categoria específica\n  }\n}","map":{"version":3,"names":["getElementType","element","metaisAlcalinos","metaisAlcalinoTerrosos","metaloides","metaisDeTransicao","lantanideos","actinideos","naoMetais","outrosMetais","halogenios","gasesNobres","atomicNumber","includes"],"sources":["/Users/cassioawt/git/GraPucrsOnline/DSF/aula-08/exemplos/tabela-periodica/src/util/elementosDefinitions.js"],"sourcesContent":["export function getElementType(element) {\n    // Array com os números atômicos dos elementos de cada grupo\n    const metaisAlcalinos = [3, 11, 19, 37, 55, 87];\n    const metaisAlcalinoTerrosos = [4, 12, 20, 38, 56, 88];\n    const metaloides = [5, 14, 32, 33, 51, 52, 84]\n    const metaisDeTransicao = [21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\n      39, 40, 41, 42, 43, 44, 45, 46, 47, 48, \n      57, 58, 59, 60, 61, 62, 63, 64, 65, 66,\n      72, 73, 74, 75, 76, 77, 78, 79, 80, \n      89, 90, 91, 92, 93, 94, 95, 96, 97, 98,\n      104, 105, 106, 107, 108, 109, 110, 111, 112];\n    const lantanideos = [57, 58, 59, 60, 61, 62, 63, 64, 65, 66,\n      67, 68, 69, 70, 71];\n    const actinideos = [89, 90, 91, 92, 93, 94, 95, 96, 97, 98,\n      99, 100, 101, 102, 103, 104, 105, 106, 107, 108,\n      109, 110, 111, 112, 117, 118];\n    const naoMetais = [1, 6, 7, 8, 15, 16, 34];\n    const outrosMetais = [13, 31, 49, 50, 81, 82, 83, 113, 114, 115, 116]\n    const halogenios = [9, 17, 35, 53];\n    const gasesNobres = [2, 10, 18, 36, 54, 86];\n  \n    // Obtém o número atômico do elemento\n    const atomicNumber = element.atomicNumber;\n  \n    // Verifica a qual grupo o número atômico pertence\n    if (metaisAlcalinos.includes(atomicNumber)) {\n      return 'metais-alcalinos';\n    } else if (metaisAlcalinoTerrosos.includes(atomicNumber)) {\n      return 'metais-alcalino-terrosos';\n    } else if (metaloides.includes(atomicNumber)) {\n      return 'metaloides';\n    } else if (metaisDeTransicao.includes(atomicNumber)) {\n      return 'metais-de-transicao';\n    } else if (lantanideos.includes(atomicNumber)) {\n      return 'lantanideos';\n    } else if (actinideos.includes(atomicNumber)) {\n      return 'actinideos';\n    } else if (naoMetais.includes(atomicNumber)) {\n      return 'nao-metais';\n    } else if (outrosMetais.includes(atomicNumber)) {\n      return 'outros-metais';\n    } else if (halogenios.includes(atomicNumber)) {\n      return 'halogenios';\n    } else if (gasesNobres.includes(atomicNumber)) {\n      return 'gases-nobres';\n    } else {\n      return ''; // Elemento não se encaixa em nenhuma categoria específica\n    }\n  }\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}